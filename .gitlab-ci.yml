image: registry.gitlab.com/fdroid/ci-images-client:latest

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

stages:
  - test
  - deploy

before_script:
  - export GRADLE_USER_HOME=$PWD/.gradle
  - export ANDROID_COMPILE_SDK=`sed -n 's,.*compileSdkVersion\s*\([0-9][0-9]*\).*,\1,p' app/build.gradle`
  - alias sdkmanager="sdkmanager --no_https"
  - echo y | sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" > /dev/null
  - apt-get update
  - apt-get -qy install gradle --no-install-recommends

.test-template: &test-template
  stage: test
  artifacts:
    name: "${CI_PROJECT_PATH}_${CI_JOB_STAGE}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}"
    paths:
      - logcat.txt
      - app/build/reports
      - app/build/outputs/*ml
      - app/build/outputs/apk
    expire_in: 1 week
    when: on_failure
  after_script:
    - echo "Download debug artifacts from https://gitlab.com/${CI_PROJECT_PATH}/-/jobs"

test_lint:
  <<: *test-template
  script:
    # always report on lint errors to the build log
    - sed -i -e 's,textReport .*,textReport true,' app/build.gradle
    - gradle build

# once these prove stable, the task should be switched to
# connectedCheck to test all the build flavors
.connected-template: &connected-template
  script:
    - gradle assembleDebug
    - export AVD_SDK=`echo $CI_JOB_NAME | awk '{print $2}'`
    - export AVD_TAG=`echo $CI_JOB_NAME | awk '{print $3}'`
    - export AVD_ARCH=`echo $CI_JOB_NAME | awk '{print $4}'`
    - export AVD_PACKAGE="system-images;android-${AVD_SDK};${AVD_TAG};${AVD_ARCH}"
    - echo $AVD_PACKAGE
    - emulator -accel-check || true
    - alias sdkmanager
    - echo y | sdkmanager "emulator" "platforms;android-$AVD_SDK" > /dev/null
    - if ! avdmanager list avd | grep "Name. avd$AVD_SDK$"; then
          set -x;
          rm -rf ~/.android/avd  $ANDROID_HOME/system-images;
          echo y | sdkmanager "$AVD_PACKAGE" > /dev/null;
          echo no | avdmanager create avd --name avd$AVD_SDK --tag "$AVD_TAG" --package "$AVD_PACKAGE" --sdcard 64M --device "Nexus 5";
          export RAMSIZE="$((`sed -n 's,^MemAvailable:[^0-9]*\([0-9][0-9]*\)[^0-9]*$,\1,p' /proc/meminfo` * 3 / 4 / 1024))";
          sed -i '/^hw\.ramSize\s*=.*/d' ~/.android/avd/*.avd/config.ini;
          echo "hw.ramSize=$RAMSIZE" >> ~/.android/avd/*.avd/config.ini;
          avdmanager list avd;
          set +x;
      fi
    - adb start-server
    - ls -l ~/.android
    - emulator -avd avd$AVD_SDK
        -no-audio
        -no-jni
        -no-snapstorage
        -no-window
        -skip-adb-auth
        -verbose
        -wipe-data
        &
    - wait-for-emulator
    - adb devices
    - adb shell input keyevent 82 &
    - test $AVD_SDK -ge 25 || export FLAG=-Pandroid.testInstrumentationRunnerArguments.notAnnotation=android.test.suitebuilder.annotation.LargeTest
    - gradle connectedDebugAndroidTest $FLAG || (adb -e logcat -d > logcat.txt; exit 1)

connected 22 default armeabi-v7a:
  retry: 1
  <<: *test-template
  <<: *connected-template

deploy_nightly:
  stage: deploy
  only:
    - master
  script:
    - test -z "$DEBUG_KEYSTORE" && exit 0
    - sed -i
        's,<string name="app_name">.*</string>,<string name="app_name">Checkey Nightly</string>,'
        app/src/main/res/values*/strings.xml
    - sed -i "s,^\(\s*versionCode\)  *[0-9].*,\1 $(date '+%s')," app/build.gradle
    # build the APKs!
    - gradle assembleDebug
    - fdroid nightly -v

after_script:
    # this file changes every time but should not be cached
    - rm -f $GRADLE_USER_HOME/caches/modules-2/modules-2.lock
    - rm -fr $GRADLE_USER_HOME/caches/*/plugin-resolution/
